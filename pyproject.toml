[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "vaultlint"
# Version is set dynamically from 'vaultlint.__version__'
dynamic = ["version"]
description = "A modular linter for Obsidian that validates Markdown, YAML front matter, and vault structure"
readme = "README.md"
requires-python = ">=3.10"
license = "GPL-3.0-or-later"
authors = [{ name = "Juan Luis Leal Contreras (Kuenlun)" }]

dependencies = ["click~=8.3", "rich~=14.2", "rich-click~=1.9"]

[project.scripts]
vaultlint = "vaultlint.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = { attr = "vaultlint.__version__" }

[tool.ruff]
# Applies to both linter and formatter unless overridden.
line-length = 88
target-version = "py313"

[tool.ruff.lint]
# Rule sets:
# E = pycodestyle errors, F = pyflakes, I = import sorting (isort compat),
# B = flake8-bugbear (bug-prone patterns), UP = pyupgrade (modernize code).
select = ["E", "F", "I", "B", "UP"]
ignore = []

# Example: ignore specific rules per file (optional)
# per-file-ignores = { "tests/**.py" = ["S101"] }

# isort-compatible options for import sorting (optional but useful)
[tool.ruff.lint.isort]
known-first-party = ["vaultlint"]
# force-single-line = false

[tool.ruff.format]
# Ruff's built-in code formatter (Black-like).
# Use `ruff format` locally and `ruff format --check` in CI to enforce.
quote-style = "preserve"          # keep existing single/double quotes
indent-style = "space"            # use spaces for indentation
skip-magic-trailing-comma = false

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[tool.coverage.report]
show_missing = true
skip_covered = false

[tool.hatch.version]
path = "src/vaultlint/__init__.py"
